version: '3.7'

services:

  # The nginx server is responsible for serving the files from the app folder 
  nginx:
    image: nginx:latest
    ports:
      # Transfers calls from the port 80 of the host to the port 80 of the container.
      - 80:80
    volumes:
      # map the nginx conf file from the host ./nginx directory to the container /etc/nginx/conf.d/default.conf so that nginx use the right conf file.
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # Map the content of the host project app folder to the /app directory of the container
      - ./app:/app
      # Creating these volumes allows us to modify the app files on the  host and update the container in real time.
  
  app:
    # The app is built using the Dockerfile at the root of the project folder.
    build:
      context: .
      dockerfile: app.Dockerfile
    # The app volume is mapped again so that this service can use it aswell
    volumes:
      - ./app:/app
  
  db:
    # The image used is the latest version of mariadb (mysql)
    image: mariadb:latest
    # We define the env variables used to connect to the db
    environment:
      # This creates a password for the root user we can log in as in order to manage the db.
      MYSQL_ROOT_PASSWORD: 'test'
      # This creates a MySQL user with limited permissions. PHP scripts will fetch data on the db as this user. 
      MYSQL_USER: 'test'
      MYSQL_PASSWORD: 'test'
      # Name of the schema
      MYSQL_DATABASE: 'dev_env_db'
    # We create a volume to store mysql data
    volumes:
      - mysqldata:/var/lib/mysql
    # Finally, the ports block exposes port 3306 so we can connect to it with a client such as MySQL Workbench for managing the database.
    ports:
      - 3306:3306
  
  phpmyadmin:
    #Phpmyadmin is a web GUI for MySQL it allows for easy db management
    image: phpmyadmin
    ports:
    #The web portal is accessible though the port 8080.
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

volumes:
  mysqldata: {}
  


